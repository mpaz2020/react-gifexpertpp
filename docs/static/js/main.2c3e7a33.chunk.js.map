{"version":3,"sources":["componentes/AddCategoria.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"yMAGe,SAASA,EAAT,GAAyC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAEjBC,mBAAS,IAFQ,mBAE9CC,EAF8C,KAElCC,EAFkC,KAgBrD,OACE,sBAAMC,SAVO,SAACC,GACdA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKhB,SACE,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBgB,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,Y,mCCRdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEkCC,UAAUH,GAF5C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAYZM,GAZY,4CAAH,sDCEL,SAASO,EAAT,GAAkC,IAAZH,EAAW,EAAXA,MAAMV,EAAK,EAALA,IAEvC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,OCFD,SAASO,EAAT,GAAiC,IAAdnB,EAAa,EAAbA,UAAa,ECFhC,SAAsBA,GAAY,IAAD,EACpBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAHmC,mBACvCC,EADuC,KAChCC,EADgC,KAe9C,OATAC,qBAAU,WACRxB,EAAQC,GAAWwB,MAAK,SAACC,GACvBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDVsBK,CAAa1B,GAA7Ba,EAHgC,EAGtCN,KAAaa,EAHyB,EAGzBA,QAEpB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAACK,EAAD,eAEIL,GADCA,EAAIC,YEhBN,SAASgB,IAAe,IAAD,EAEAzC,mBAAS,CAAC,cAFV,mBAE7B0C,EAF6B,KAEjB3C,EAFiB,KAIpC,OACE,qCACE,8CACA,cAACD,EAAD,CAAcC,cAAeA,IAC7B,uBAEA,6BAEM2C,EAAWnB,KAAI,SAAAT,GAAS,OAEpB,cAACmB,EAAD,CAEAnB,UAAWA,GADNA,W,MCdrB6B,IAASC,OAEL,cAACH,EAAD,IAEFI,SAASC,eAAe,W","file":"static/js/main.2c3e7a33.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AddCategoria ({setCategorias}) {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const inputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 0) {\r\n      setCategorias(cats => [inputValue,...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <input \r\n      type=\"text\" \r\n      value={inputValue} \r\n      onChange={inputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategoria.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (categoria) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=FCwKrRRonX5uIf4HkibNp97uglFYPFcR`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  };\r\n","import React from 'react'\r\n\r\nexport default function GifGridItem({title,url}){\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","// import React, { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nexport default function GifGrid({ categoria }) {\r\n  \r\n\r\n  const {data: images,loading}=useFetchGifs(categoria);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Cargando..</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map((img) => (\r\n            <GifGridItem \r\n            key={img.id} \r\n            {...img}>            \r\n            </GifGridItem>\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport default function useFetchGifs(categoria) {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categoria).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [categoria]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport AddCategoria from \"./componentes/AddCategoria\";\r\nimport GifGrid from \"./componentes/GifGrid\";\r\n\r\nexport default function GifExpertApp(){\r\n\r\n  const [categorias, setCategorias] = useState(['samurai x']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategoria setCategorias={setCategorias}></AddCategoria>\r\n      <hr></hr>\r\n\r\n      <ul>\r\n        {\r\n            categorias.map(categoria =>            \r\n            (                \r\n                <GifGrid \r\n                key={categoria}\r\n                categoria={categoria}\r\n                ></GifGrid>\r\n            )\r\n            )\r\n        }\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp  from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}